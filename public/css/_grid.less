// Grid system

// Grid all elements
.grid-all(@type: "mobile") {
  .grid-mobile-calc(@index, @list: "") when (@index = @grid-columns )  {
    @item: ~".grid-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index > 0) and (@index < @grid-columns ) {
    @item: ~".grid-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}, @{list}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index = 0) and (@type = "full") {
    @{list} {
      float: left;
    }
  }
  .grid-mobile-calc(@index, @list: "") when (@index = 0) and (@type = "mobile")  {
    @{list} {
      position: relative;
      padding: 0 @grid-column-padding;
      .box-sizing(border-box);
    }
  }
  .grid-mobile-calc(@grid-columns);
}

// Grid mobile
.grid-width-mobile() {
  .grid-mobile-calc(@index, @list: "") when (@index = @grid-columns )  {
    @item: ~".grid-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index > 0) and (@index < @grid-columns ) {
    @item: ~".grid-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}, @{list}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index = 0)  {
    @{list} {
      width: 100%;
    }
  }
  .grid-mobile-calc(@grid-columns);
}

.grid-push-mobile() {
  .grid-mobile-calc(@index, @list: "") when (@index = @grid-columns )  {
    @item: ~".grid-push-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index > 0) and (@index < @grid-columns ) {
    @item: ~".grid-push-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}, @{list}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index = 0)  {
    @{list} {
      left: 0;
    }
  }
  .grid-mobile-calc(@grid-columns);
}

.grid-pull-mobile() {
  .grid-mobile-calc(@index, @list: "") when (@index = @grid-columns )  {
    @item: ~".grid-pull-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index > 0) and (@index < @grid-columns ) {
    @item: ~".grid-pull-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}, @{list}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index = 0)  {
    @{list} {
      right: 0;
    }
  }
  .grid-mobile-calc(@grid-columns);
}

.grid-offset-mobile() {
  .grid-mobile-calc(@index, @list: "") when (@index = @grid-columns )  {
    @item: ~".grid-offset-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index > 0) and (@index < @grid-columns ) {
    @item: ~".grid-offset-@{index}";
    .grid-mobile-calc(@index - 1, ~"@{item}, @{list}");
  }
  .grid-mobile-calc(@index, @list: "") when (@index = 0)  {
    @{list} {
      margin-left: 0;
    }
  }
  .grid-mobile-calc(@grid-columns);
}

// Grid width
.grid-width(@index) when (@index > 0)  {
  .grid-@{index} {
    width: percentage(  @index / @grid-columns );
  }
  .grid-width(@index - 1);
}

// Grid push
.grid-push(@index) when (@index > 0) {
  .grid-push-@{index} {
    left: percentage( @index / @grid-columns );
  }
  .grid-push(@index - 1);
}

// Grid pull
.grid-pull(@index) when (@index > 0) {
  .grid-pull-@{index} {
    right: percentage( @index / @grid-columns );
  }
  .grid-pull(@index - 1);
}

// Grid offset
.grid-offset(@index) when (@index > 0) {
  .grid-offset-@{index} {
    margin-left: percentage( @index / @grid-columns );
  }
  .grid-offset(@index - 1);
}

.grid-container {
  margin-right: auto;
  margin-left: auto;
  .clearfix();
}

.grid-row {
  margin-bottom: @grid-column-padding;
  .clearfix();
}

@media @mq-mobile {
  .grid-all();

  .grid-container {
    width: 100%;
  }
}
@media @mq-mobile-only {
  .grid-width-mobile();
  .grid-push-mobile();
  .grid-pull-mobile();
  .grid-offset-mobile();
}
@media @mq-tablet {
  .grid-all("full");
  .grid-width(@grid-columns);
  .grid-push(@grid-columns);
  .grid-pull(@grid-columns);
  .grid-offset(@grid-columns);

  .grid-container{
    width: @grid-tablet-breakpoint;
  }
}
@media @mq-normal {
  .grid-container{
    width: @grid-normal-breakpoint;
  }
}
@media @mq-wide {
  .grid-container{
    width: @grid-wide-breakpoint;
  }
}